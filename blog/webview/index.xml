<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WebView on Client Infra</title><link>https://clientinfra.com/blog/webview/</link><description>Recent content in WebView on Client Infra</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 26 Jul 2023 00:00:00 +0800</lastBuildDate><atom:link href="https://clientinfra.com/blog/webview/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 AndroidX 增强 WebView 的能力</title><link>https://clientinfra.com/enhancing-webview-with-androidx/</link><pubDate>Wed, 26 Jul 2023 00:00:00 +0800</pubDate><guid>https://clientinfra.com/enhancing-webview-with-androidx/</guid><description>在应用开发过程中，为了在多个平台上保持一致的用户体验和提高开发效率，许多应用程序选择使用 H5 技术。在 Android 平台上，通常使用 WebView 组件来承载 H5 内容以供展示。
WebView 存在的问题 自 Android Lollipop 起，WebView 组件的升级已经独立于 Android 平台。然而，控制 WebView 的 API(android.webkit) 仍然与平台升级相关。这意味着应用开发者只能使用当前平台所定义的接口，而无法充分利用 WebView 的全部能力。例如: WebView.startSafeBrowsing API 在 Android 8.1 上被添加，该 Feature 由 WebView 提供，即使我们在 Android 7.0 更新 WebView 拥有了该 Feature ,由于 Android 7.0 没有 WebView.startSafeBrowsing API ，我们也没办法使用该功能。
WebView 的实现基于 Chromium 开源项目,而 Android 则基于 AOSP 项目，这两个项目有着不同的发布周期，WebView 往往一个月就可以推出下一个版本，而 Android 则需要一年的时间，对于 WebView 新增的 Feature 我们最迟需要一年才能使用。
AndroidX Webkit 的出现 为了解决上面平台能力和 WebView 不匹配的问题，我们可以独立于平台之外定义一套 WebView API ，并让它随着 WebView 的 Feature 更新 API ，这样解决了现有的问题却导入了另一个问题——如何将新定义的 WebView API 和 WebView 进行衔接。</description></item></channel></rss>